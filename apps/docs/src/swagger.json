{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "API Documentation",
    "description": "Documentation for the API endpoints"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "paths": {
    "/auth/login": {
      "post": {
        "summary": "Logs in a user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User credentials",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful login"
          },
          "400": {
            "description": "Invalid credentials or validation failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "summary": "Registers a new user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User registration details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User registered successfully"
          },
          "400": {
            "description": "User already exists or validation failed"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "summary": "Refreshes access token",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Access token refreshed"
          },
          "400": {
            "description": "Invalid token or user not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/auth/verify": {
      "get": {
        "summary": "Verifies user",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "description": "Verification token",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User verified"
          },
          "400": {
            "description": "Invalid token or token expired"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/targets": {
      "get": {
        "summary": "Get all targets",
        "parameters": [
          {
            "name": "isAfter",
            "in": "query",
            "description": "Filter targets with end date after this date",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "isBefore",
            "in": "query",
            "description": "Filter targets with end date before this date",
            "required": false,
            "type": "string",
            "format": "date"
          },
          {
            "name": "lat",
            "in": "query",
            "description": "Latitude",
            "required": false,
            "type": "number",
            "minimum": -90,
            "maximum": 90
          },
          {
            "name": "lng",
            "in": "query",
            "description": "Longitude",
            "required": false,
            "type": "number",
            "minimum": -180,
            "maximum": 180
          },
          {
            "name": "maxDistance",
            "in": "query",
            "description": "Maximum distance from the given point in meters (default is 5km)",
            "required": false,
            "type": "number",
            "minimum": 0
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "type": "number",
            "default": 1
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Limit per page",
            "required": false,
            "type": "number",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "Targets retrieved successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "post": {
        "summary": "Create a target",
        "consumes": ["multipart/form-data"],
        "parameters": [
          {
            "name": "image",
            "in": "formData",
            "description": "Image file",
            "required": true,
            "type": "file"
          },
          {
            "name": "latitude",
            "in": "formData",
            "description": "Latitude of the target",
            "required": true,
            "type": "number"
          },
          {
            "name": "longitude",
            "in": "formData",
            "description": "Longitude of the target",
            "required": true,
            "type": "number"
          },
          {
            "name": "endDate",
            "in": "formData",
            "description": "End date of the target",
            "required": true,
            "type": "string",
            "format": "date"
          }
        ],
        "responses": {
          "200": {
            "description": "Target created successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/target/{targetId}": {
      "get": {
        "summary": "Get a target",
        "parameters": [
          {
            "name": "targetId",
            "in": "path",
            "description": "ID of the target",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Target retrieved successfully"
          },
          "404": {
            "description": "Target not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "patch": {
        "summary": "Update a target",
        "parameters": [
          {
            "name": "targetId",
            "in": "path",
            "description": "ID of the target",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Target updated successfully"
          },
          "404": {
            "description": "Target not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      },
      "delete": {
        "summary": "Delete a target",
        "parameters": [
          {
            "name": "targetId",
            "in": "path",
            "description": "ID of the target",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Target deleted successfully"
          },
          "404": {
            "description": "Target not found"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/target/{targetId}/like": {
      "patch": {
        "summary": "Like a target",
        "parameters": [
          {
            "name": "targetId",
            "in": "path",
            "description": "ID of the target",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Like details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "liked": {
                  "type": "boolean",
                  "description": "Whether the target is liked or unliked"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Target liked successfully"
          },
          "404": {
            "description": "Target not found"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/target/{targetId}/reaction": {
      "post": {
        "summary": "Create a target reaction",
        "consumes": ["multipart/form-data"],
        "parameters": [
          {
            "name": "targetId",
            "in": "formData",
            "description": "ID of the target",
            "required": true,
            "type": "string"
          },
          {
            "name": "image",
            "in": "formData",
            "description": "Image file",
            "required": true,
            "type": "file"
          }
        ],
        "responses": {
          "200": {
            "description": "Target reaction created successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/target/{targetId}/reaction/{id}": {
      "delete": {
        "summary": "Delete a target reaction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the target reaction",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Target reaction deleted successfully"
          },
          "404": {
            "description": "Target reaction not found"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/target/{targetId}/reaction/{id}/like": {
      "patch": {
        "summary": "Like or unlike a target reaction",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of the target reaction",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Like details",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "liked": {
                  "type": "boolean",
                  "description": "Whether the target is liked or unliked"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Like status updated successfully"
          },
          "404": {
            "description": "Target reaction not found"
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    }
  },
  "definitions": {
    "LoginRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "format": "email",
          "description": "User email"
        },
        "password": {
          "type": "string",
          "minLength": 8,
          "description": "User password"
        }
      },
      "required": ["email", "password"]
    },
    "RegisterRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "format": "email",
          "description": "User email"
        },
        "password": {
          "type": "string",
          "minLength": 8,
          "description": "User password"
        }
      },
      "required": ["email", "password"]
    }
  }
}
